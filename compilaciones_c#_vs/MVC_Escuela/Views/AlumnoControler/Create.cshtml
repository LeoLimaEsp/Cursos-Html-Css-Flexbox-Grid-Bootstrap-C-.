@model MVC_Escuela.Models.AlumnoViewModel

@{
    ViewData["Title"] = "Create";
}

<h1>Crear nuevo alumno</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Nombre" class="control-label"></label>
                <input asp-for="Nombre" class="form-control" />
                <span asp-validation-for="Nombre" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ApellidoPaterno" class="control-label"></label>
                <input asp-for="ApellidoPaterno" class="form-control" />
                <span asp-validation-for="ApellidoPaterno" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ApellidoMaterno" class="control-label"></label>
                <input asp-for="ApellidoMaterno" class="form-control" />
                <span asp-validation-for="ApellidoMaterno" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Edad" class="control-label"></label>
                <input asp-for="Edad" class="form-control" />
                <span asp-validation-for="Edad" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Genero" class="control-label"></label>
                <input asp-for="Genero" class="form-control" />
                <span asp-validation-for="Genero" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Email" class="control-label"></label>
                <input asp-for="Email" class="form-control" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="iDMateria1" class="control-label"></label>
                <!-- Usamos un método conocido como HTML helper -->
                <!-- Parametros:        variable para guardar el id seleccionado, La lista para rellenar, atributos extras -->
                @{
                    var materiasList1 = Model.Materias.Select(m => new SelectListItem { Value = m.IdMateria.ToString(), Text = m.Nombre });
                }
                @Html.DropDownListFor( m=>m.iDMateria1, materiasList1, "Seleccionar...", new { @class = "form-select" })
            </div>

            <div class="form-group">
                <label asp-for="iDMateria2" class="control-label"></label>
                <!-- Usamos un método conocido como HTML helper -->
                <!-- Parametros:        variable para guardar el id seleccionado, La lista para rellenar, atributos extras -->
               
                @Html.DropDownListFor( m=>m.iDMateria2, materiasList1, "Seleccionar...", new { @class = "form-select" })
            </div>

            <div class="form-group">
                <label asp-for="iDMateria3" class="control-label"></label>
                <!-- Usamos un método conocido como HTML helper -->
                <!-- Parametros:        variable para guardar el id seleccionado, La lista para rellenar, atributos extras -->
               
                @Html.DropDownListFor( m=>m.iDMateria3, materiasList1, "Seleccionar...", new { @class = "form-select" })
            </div>

            <br />
            <div class="form-group">
                <input type="submit" value="Crear alumno" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Regresar a la lista de alumnos</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
